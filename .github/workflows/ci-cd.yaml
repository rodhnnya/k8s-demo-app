name: CI/CD

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: k8s-demo-app
  REGISTRY: ghcr.io
  NAMESPACE: ${{ secrets.K8S_NAMESPACE || 'metal' }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        run: |
          IMAGE=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          docker build -t "$IMAGE:latest" -t "$IMAGE:sha-${{ github.sha }}" ./app
          docker push "$IMAGE:latest"
          docker push "$IMAGE:sha-${{ github.sha }}"

      - name: Upload image ref
        run: echo "image=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:sha-${{ github.sha }}" >> $GITHUB_OUTPUT
        id: img

  deploy:
    needs: build-and-push
    if: ${{ secrets.KUBE_CONFIG != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          chmod 600 kubeconfig
          echo "KUBECONFIG=$PWD/kubeconfig" >> $GITHUB_ENV

      - name: Ensure namespace exists
        run: kubectl apply -f k8s/namespace.yaml

      - name: Apply manifests
        run: |
          # Patch the image in deployment to the exact SHA tag
          IMAGE=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:sha-${{ github.sha }}
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl -n ${{ env.NAMESPACE }} set image deployment/k8s-demo-app k8s-demo-app=$IMAGE --record
